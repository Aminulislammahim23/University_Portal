<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QDURXhpZgAATU0AKgAAAAgAAwE7AAIAAAATAAAAModpAAQAAAAB
        AAAARpydAAEAAAAmAAAApgAAAABBbWludWwgSXNsYW0gTWFoaW0AAAAEkAMAAgAAABQAAAB8kAQAAgAA
        ABQAAACQkpEAAgAAAAMxNwAAkpIAAgAAAAMxNwAAAAAAADIwMjU6MDc6MDQgMTY6MjM6MzMAMjAyNTow
        NzowNCAxNjoyMzozMwAAAEEAbQBpAG4AdQBsACAASQBzAGwAYQBtACAATQBhAGgAaQBtAAAA/9sAQwAH
        BQUGBQQHBgUGCAcHCAoRCwoJCQoVDxAMERgVGhkYFRgXGx4nIRsdJR0XGCIuIiUoKSssKxogLzMvKjIn
        Kisq/9sAQwEHCAgKCQoUCwsUKhwYHCoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
        KioqKioqKioqKioq/8AAEQgATgDKAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYH
        CAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNi
        coIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeI
        iYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz
        9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAEC
        dwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpD
        REVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKz
        tLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+kaK
        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
</value>
  </data>
</root>